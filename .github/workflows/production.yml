name: Production

on:
  release:
    types: [published]

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      ENVIRONMENT: "production"
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Build docker image
        run: |
          TAG=`echo ${GITHUB_REF} | awk -F/ '{print $3}'` make production-build

      - name: Push docker image
        run: |
          TAG=`echo ${GITHUB_REF} | awk -F/ '{print $3}'` make production-push

  deploy:
    name: Deploy application
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      ENVIRONMENT: "production"
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare ssh-key
        env:
          SSH_KEY_PRIVATE: ${{ secrets.SSH_KEY_PRIVATE }}
          SSH_KEY_PUBLIC: ${{ secrets.SSH_KEY_PUBLIC }}
        run: |
          mkdir ${HOME}/.ssh
          echo "${SSH_KEY_PRIVATE}" > ${HOME}/.ssh/ssh-key
          echo "${SSH_KEY_PUBLIC}" > ${HOME}/.ssh/ssh-key.pub
          chmod 600 ${HOME}/.ssh/ssh-key ${HOME}/.ssh/ssh-key.pub
          cat <<EOF > ${HOME}/.ssh/config
          Host ${DEPLOY_HOST}
            User ${SSH_USER}
            HashKnownHosts no
            ForwardAgent no
            StrictHostKeyChecking no
            IdentityFile ${HOME}/.ssh/ssh-key
          EOF

      - name: Deploy stack
        run: |
          TAG=`echo ${GITHUB_REF} | awk -F/ '{print $3}'` make production-deploy
